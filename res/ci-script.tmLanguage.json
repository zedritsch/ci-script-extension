{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "CI-Script",
	"patterns": [
		{
			"name": "comment.block.cis",
			"begin": "###",
			"end": "###",
			"patterns": [
				{
					"name": "constant.character.escape.cis",
					"match": "\\\\'"
				}
			]
		},
		{
			"name": "comment.line.number-sign.cis",
			"match": "#.*"
		},
		{
			"name": "keyword.directive.cis",
			"match": "\\b(import|from|export)\\b"
		},
		{
			"name": "storage.modifier.cis",
			"match": "\\b(secret|async)\\b"
		},
		{
			"name": "storage.type.cis",
			"match": "\\b(var|const|func|struct)\\b"
		},
		{
			"name": "keyword.control.conditional.cis",
			"match": "\\b(if|else|and|or)\\b"
		},
		{
			"name": "keyword.control.loop.cis",
			"match": "\\b(do|while|for|in)\\b"
		},
		{
			"name": "keyword.control.flow.cis",
			"match": "\\b(skip|break|await|return)\\b"
		},
		{
			"name": "keyword.operator.logical.cis",
			"match": "[&|^]|<<|>>"
		},
		{
			"name": "keyword.operator.arithmetic.cis",
			"match": "\\+\\+|--|\\*\\*|//|%%|[+\\-*/%]"
		},
		{
			"name": "keyword.operator.relational.cis",
			"match": "==|!=|<=|>=|[<>]"
		},
		{
			"name": "keyword.operator.logical.cis",
			"match": "!"
		},
		{
			"name": "keyword.operator.assign.cis",
			"match": "="
		},
		{
			"name": "keyword.operator.ternary.cis",
			"match": "\\?"
		},
		{
			"name": "constant.language.cis",
			"match": "\\b(this|null)\\b"
		},
		{
			"name": "constant.language.boolean.cis",
			"match": "\\b(true|false)\\b"
		},
		{
			"name": "support.type.primitive.cis",
			"match": "\\b(bool|int|uint|float)\\b"
		},
		{
			"name": "string.quoted.single.cis",
			"begin": "'",
			"end": "'",
			"patterns": [
				{
					"name": "constant.character.escape.cis",
					"match": "\\\\'"
				},
				{
					"include": "#ansi-escape"
				},
				{
					"include": "#escape"
				}
			]
		},
		{
			"name": "string.quoted.double.cis",
			"begin": "\\}(?=([^\"]|\\\\\")*\"((([^\"]|\\\\\")*\"){2})*([^\"]|\\\\\")*$)|\"",
			"end": "\\{|\"",
			"patterns": [
				{
					"name": "constant.character.escape.cis",
					"match": "\\\\{|\\\\\""
				},
				{
					"include": "#ansi-escape"
				},
				{
					"include": "#escape"
				}
			]
		},
		{
			"name": "punctuation.definition.cis",
			"match": "[\\(\\)\\[\\]\\{\\}]"
		},
		{
			"name": "punctuation.separator.cis",
			"match": "[.,:;]"
		},
		{
			"name": "constant.numeric.cis",
			"match": "\\b((\\d+_)*(\\d+\\.)?\\d+|0x([0-9A-Fa-f]+_)*([0-9A-Fa-f]+\\.)?[0-9A-Fa-f]+|0o([0-7]+_)*([0-7]+\\.)?[0-7]+|0b([01]+_)*([01]+\\.)?[01]+)\\b"
		},
		{
			"name": "entity.name.type.cis",
			"match": "(?<=(\\bstruct\\b(\\s|\\n)+\\(?(([^\\(\\[\\{;]|\\n)+((\\(([^\\(\\{;]|\\n)*\\)|\\[([^\\[\\{;]|\\n)*\\])([^\\(\\[\\{;]|\\n)*)*,\\s*)*)|:(\\s|\\n)*)\\b[a-zA-Z0-9]+\\b"
		},
		{
			"name": "entity.name.function.cis",
			"match": "(?<=\\bfunc\\b(\\s|\\n)+(([^\\(\\[\\{;]|\\n)+((\\(([^\\(\\{;]|\\n)*\\)|\\[([^\\[\\{;]|\\n)*\\])([^\\(\\[\\{;]|\\n)*)*,\\s*)*)\\b[a-zA-Z0-9]+\\b"
		},
		{
			"name": "variable.other.constant.cis",
			"match": "(?<=\\bconst\\b(\\s|\\n)+(([^\\(\\[\\{;]|\\n)+((\\(([^\\(\\{;]|\\n)*\\)|\\[([^\\[\\{;]|\\n)*\\])([^\\(\\[\\{;]|\\n)*)*,\\s*)*)\\b[a-zA-Z0-9]+\\b"
		},
		{
			"name": "variable.cis",
			"match": "(?<=\\bvar\\b(\\s|\\n)+\\(?(([^\\(\\[\\{;]|\\n)+((\\(([^\\(\\{;]|\\n)*\\)|\\[([^\\[\\{;]|\\n)*\\])([^\\(\\[\\{;]|\\n)*)*,\\s*)*)\\b[a-zA-Z0-9]+\\b"
		},
		{
			"name": "entity.name.type.cis",
			"match": "\\b[0-9_]*[A-Z]+[a-zA-Z0-9_]*[a-z][a-zA-Z0-9_]*\\b"
		},
		{
			"name": "entity.name.function.cis",
			"match": "\\b[0-9_]*[a-z]+[a-zA-Z0-9_]*[A-Z][a-zA-Z0-9_]*\\b|\\b[a-zA-Z0-9_]+\\b(?=\\s*\\()"
		},
		{
			"name": "variable.parameter.cis",
			"match": "(?<=\\bfunc\\b([^\\(\\[\\{;]|\\n)+\\((([^\\(\\[\\{;]|\\n)+((\\(([^\\(\\{;]|\\n)*\\)|\\[([^\\[\\{;]|\\n)*\\])([^\\(\\[\\{;]|\\n)*)*,\\s*)*)\\b[a-zA-Z0-9]+\\b"
		},
		{
			"name": "variable.cis",
			"match": "\\b[a-z0-9_]+\\b"
		},
		{
			"name": "variable.other.constant.cis",
			"match": "\\b[A-Z0-9_]+\\b"
		}
	],
	"repository": {
		"escape": {
			"name": "constant.character.escape.cis",
			"match": "\\\\([\\\\0abefntv]|x[0-7][0-9A-Fa-f]|o[0-1]?[0-7]{1,2}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})"
		},
		"ansi-escape": {
			"name": "constant.character.escape.cis",
			"match": "\\\\(e|x1b|o33|u001b|U0000001b)([M78]|\\[([Hsu]|[0-9]{1,5}([A-G]|;[0-9]{1,5}[Hf])|[0-2]?K|[0-3]?J|([01]?[0-9]{1,2}|2[0-4][0-9]|25[0-5])(;([01]?[0-9]{1,2}|2[0-4][0-9]|25[0-5]))*m))"
		}
	},
	"scopeName": "source.cis"
}